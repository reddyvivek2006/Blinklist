{"ast":null,"code":"var _jsxFileName = \"/home/vivers/card/src/AddButton.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport { Grid } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport { addBook } from \"./store/action\";\nimport img1 from \"./img1.png\";\nimport { BrushRounded } from \"@material-ui/icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1)\n    }\n  }\n}));\nexport default function ContainedButtons() {\n  _s();\n\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      href: \"#contained-buttons\",\n      children: \"ADD BOOK\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ContainedButtons, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = ContainedButtons;\n\nfunction Add_Form() {\n  _s2();\n\n  const [book, setbook] = useState({\n    img_src: img1,\n    time_left: \"60 min left\",\n    persons_read: \"16k\",\n    book_name: \"\",\n    author: \"\"\n  });\n\n  const aboutBook = event => {\n    setbook({ ...book,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const dispatch = useDispatch();\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        children: \"x\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      conatiner: true,\n      children: [\"IMAGE_SOURCE : \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      children: [\"NAME OF THE BOOK:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"book_name\",\n        onChange: aboutBook\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      children: [\"AUTHOR:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"author\",\n        onChange: aboutBook\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        onClick: () => dispatch(addBook(book))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n} // export default Add_Form;\n\n\n_s2(Add_Form, \"oyXWSUZ3diOaoJ4sHOgHzyxXvAE=\", false, function () {\n  return [useDispatch];\n});\n\n_c2 = Add_Form;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ContainedButtons\");\n$RefreshReg$(_c2, \"Add_Form\");","map":{"version":3,"sources":["/home/vivers/card/src/AddButton.js"],"names":["React","useState","makeStyles","Button","Grid","useDispatch","addBook","img1","BrushRounded","useStyles","theme","root","margin","spacing","ContainedButtons","classes","Add_Form","book","setbook","img_src","time_left","persons_read","book_name","author","aboutBook","event","target","name","value","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\n\nimport { Grid } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport { addBook } from \"./store/action\";\nimport img1 from \"./img1.png\";\nimport { BrushRounded } from \"@material-ui/icons\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n}));\n\nexport default function ContainedButtons() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Button variant=\"contained\" color=\"primary\" href=\"#contained-buttons\">\n        ADD BOOK\n      </Button>\n    </div>\n  );\n}\n\nfunction Add_Form() {\n  const [book, setbook] = useState({\n    img_src: img1,\n    time_left: \"60 min left\",\n    persons_read: \"16k\",\n    book_name: \"\",\n    author: \"\",\n  });\n\n  const aboutBook = (event) => {\n    setbook({ ...book, [event.target.name]: event.target.value });\n  };\n  const dispatch = useDispatch();\n\n  return (\n    <Grid>\n      <Grid container>\n        <Button>x</Button>\n      </Grid>\n      <Grid conatiner>\n        IMAGE_SOURCE : <input type=\"text\"></input>\n      </Grid>\n\n      <Grid container>\n        NAME OF THE BOOK:\n        <input type=\"text\" name=\"book_name\" onChange={aboutBook}></input>\n      </Grid>\n\n      <Grid container>\n        AUTHOR:<input type=\"text\" name=\"author\" onChange={aboutBook}></input>\n      </Grid>\n      <Grid container>\n        <input type=\"submit\" onClick={() => dispatch(addBook(book))}></input>\n      </Grid>\n    </Grid>\n  );\n}\n\n// export default Add_Form;\n"]},"metadata":{},"sourceType":"module"}