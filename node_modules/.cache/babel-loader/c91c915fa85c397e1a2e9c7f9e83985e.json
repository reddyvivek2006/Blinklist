{"ast":null,"code":"var _jsxFileName = \"/home/vivers/card/src/BookStatus.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport { Card, Grid } from \"@material-ui/core\";\nimport { useSelector } from \"react-redux\";\nimport BookCard1 from \"./Card2\";\nimport { useState } from \"react\";\nimport MediaCard from \"./Card2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TabPanel(props) {\n  const {\n    children,\n    value,\n    index,\n    ...other\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    role: \"tabpanel\",\n    hidden: value !== index,\n    id: `simple-tabpanel-${index}`,\n    \"aria-labelledby\": `simple-tab-${index}`,\n    ...other,\n    children: value === index && /*#__PURE__*/_jsxDEV(Box, {\n      p: 3,\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n\n_c = TabPanel;\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired\n};\nexport default function BookStatus() {\n  _s();\n\n  const state = useSelector(state => state.books);\n  console.log(state);\n  const [value, setValue] = useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"static\",\n      color: \"white\",\n      i: true,\n      children: /*#__PURE__*/_jsxDEV(Tabs, {\n        value: value,\n        onChange: handleChange,\n        \"aria-label\": \"simple tabs example\",\n        indicatorColor: \"secondary\",\n        children: [/*#__PURE__*/_jsxDEV(Tab, {\n          label: \"CURRENTLY READING\",\n          indicatorColor: \"green\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          label: \"FINISHED\",\n          indicatorColor: \"green\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n      value: value,\n      index: 0,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"row\",\n        spacing: 0,\n        children: state.reading.map(item => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(BookCard1, {\n            book: item\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n      value: value,\n      index: 1,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        item: true,\n        children: state.finished.map(item => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(BookCard1, {\n            book: item\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\n_s(BookStatus, \"5lsEJ1ULdZ2RY+6sAvWi9b4m/Lk=\", false, function () {\n  return [useSelector];\n});\n\n_c2 = BookStatus;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TabPanel\");\n$RefreshReg$(_c2, \"BookStatus\");","map":{"version":3,"sources":["/home/vivers/card/src/BookStatus.js"],"names":["React","PropTypes","makeStyles","AppBar","Tabs","Tab","Typography","Box","Card","Grid","useSelector","BookCard1","useState","MediaCard","TabPanel","props","children","value","index","other","propTypes","node","any","isRequired","BookStatus","state","books","console","log","setValue","handleChange","event","newValue","reading","map","item","finished"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport { Card, Grid } from \"@material-ui/core\";\nimport { useSelector } from \"react-redux\";\nimport BookCard1 from \"./Card2\";\nimport { useState } from \"react\";\nimport MediaCard from \"./Card2\";\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nexport default function BookStatus() {\n  const state = useSelector((state) => state.books);\n  console.log(state);\n  const [value, setValue] = useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <div>\n      <AppBar position=\"static\" color=\"white\" i>\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          aria-label=\"simple tabs example\"\n          indicatorColor=\"secondary\"\n        >\n          <Tab label=\"CURRENTLY READING\" indicatorColor=\"green\" />\n          <Tab label=\"FINISHED\" indicatorColor=\"green\" />\n        </Tabs>\n      </AppBar>\n      <TabPanel value={value} index={0}>\n        <Grid container direction=\"row\" spacing={0}>\n          {state.reading.map((item) => (\n            <Grid item>\n              <BookCard1 book={item} />\n            </Grid>\n          ))}\n        </Grid>\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        <Grid container item>\n          {state.finished.map((item) => (\n            <Grid item>\n              <BookCard1 book={item} />\n            </Grid>\n          ))}\n        </Grid>\n      </TabPanel>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}