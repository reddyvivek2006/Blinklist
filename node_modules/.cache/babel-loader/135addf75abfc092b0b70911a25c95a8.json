{"ast":null,"code":"var _jsxFileName = \"/home/vivers/card/src/Add_Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport { addBook } from \"./store/action\";\nimport img1 from \"./img1.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Add_Form(props) {\n  _s();\n\n  const [book, setbook] = useState({\n    img_src: img1,\n    time_left: \"60 min left\",\n    persons_read: \"16k\",\n    book_name: \"\",\n    author: \"\"\n  });\n  const styles = {\n    dialog: {\n      width: \"150vh\"\n    },\n    button: {\n      marginLeft: \"2%\",\n      marginTop: \"2%\",\n      marginBottom: \"2%\",\n      marginRight: \"2%\"\n    }\n  };\n\n  const handleClose = () => {\n    onClose(selectedValue);\n  };\n\n  const aboutBook = event => {\n    setbook({ ...book,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const dispatch = useDispatch();\n  const {\n    onClose,\n    selectedValue,\n    open\n  } = props;\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      conatiner: true,\n      children: [\"IMAGE_SOURCE : \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      children: [\"NAME OF THE BOOK:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"book_name\",\n        onChange: aboutBook\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      children: [\"AUTHOR:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"author\",\n        onChange: aboutBook\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        onClick: () => dispatch(addBook(book)) && {\n          handleClose\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Add_Form, \"oyXWSUZ3diOaoJ4sHOgHzyxXvAE=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Add_Form;\nexport default Add_Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Add_Form\");","map":{"version":3,"sources":["/home/vivers/card/src/Add_Form.js"],"names":["React","useState","Grid","useDispatch","addBook","img1","Add_Form","props","book","setbook","img_src","time_left","persons_read","book_name","author","styles","dialog","width","button","marginLeft","marginTop","marginBottom","marginRight","handleClose","onClose","selectedValue","aboutBook","event","target","name","value","dispatch","open"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,OAAT,QAAwB,gBAAxB;AACA,OAAOC,IAAP,MAAiB,YAAjB;;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACvB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC;AAC/BS,IAAAA,OAAO,EAAEL,IADsB;AAE/BM,IAAAA,SAAS,EAAE,aAFoB;AAG/BC,IAAAA,YAAY,EAAE,KAHiB;AAI/BC,IAAAA,SAAS,EAAE,EAJoB;AAK/BC,IAAAA,MAAM,EAAE;AALuB,GAAD,CAAhC;AAQA,QAAMC,MAAM,GAAG;AACbC,IAAAA,MAAM,EAAE;AACNC,MAAAA,KAAK,EAAE;AADD,KADK;AAKbC,IAAAA,MAAM,EAAE;AACNC,MAAAA,UAAU,EAAE,IADN;AAENC,MAAAA,SAAS,EAAE,IAFL;AAGNC,MAAAA,YAAY,EAAE,IAHR;AAINC,MAAAA,WAAW,EAAE;AAJP;AALK,GAAf;;AAaA,QAAMC,WAAW,GAAG,MAAM;AACxBC,IAAAA,OAAO,CAACC,aAAD,CAAP;AACD,GAFD;;AAIA,QAAMC,SAAS,GAAIC,KAAD,IAAW;AAC3BlB,IAAAA,OAAO,CAAC,EAAE,GAAGD,IAAL;AAAW,OAACmB,KAAK,CAACC,MAAN,CAAaC,IAAd,GAAqBF,KAAK,CAACC,MAAN,CAAaE;AAA7C,KAAD,CAAP;AACD,GAFD;;AAGA,QAAMC,QAAQ,GAAG5B,WAAW,EAA5B;AACA,QAAM;AAAEqB,IAAAA,OAAF;AAAWC,IAAAA,aAAX;AAA0BO,IAAAA;AAA1B,MAAmCzB,KAAzC;AACA,sBACE,QAAC,IAAD;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAA,iDACiB;AAAO,QAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,cADjB;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAA,mDAEE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,WAAxB;AAAoC,QAAA,QAAQ,EAAEmB;AAA9C;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eASE;AAAA;AAAA;AAAA;AAAA,YATF,eAWE,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAA,yCAEE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,QAAxB;AAAiC,QAAA,QAAQ,EAAEA;AAA3C;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAXF,eAeE;AAAA;AAAA;AAAA;AAAA,YAfF,eAiBE,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAA,8BACE;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,OAAO,EAAE,MAAMK,QAAQ,CAAC3B,OAAO,CAACI,IAAD,CAAR,CAAR,IAA2B;AAAEe,UAAAA;AAAF;AAF5C;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD;;GA1DQjB,Q;UA6BUH,W;;;KA7BVG,Q;AA4DT,eAAeA,QAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport { addBook } from \"./store/action\";\nimport img1 from \"./img1.png\";\n\nfunction Add_Form(props) {\n  const [book, setbook] = useState({\n    img_src: img1,\n    time_left: \"60 min left\",\n    persons_read: \"16k\",\n    book_name: \"\",\n    author: \"\",\n  });\n\n  const styles = {\n    dialog: {\n      width: \"150vh\",\n    },\n\n    button: {\n      marginLeft: \"2%\",\n      marginTop: \"2%\",\n      marginBottom: \"2%\",\n      marginRight: \"2%\",\n    },\n  };\n\n  const handleClose = () => {\n    onClose(selectedValue);\n  };\n\n  const aboutBook = (event) => {\n    setbook({ ...book, [event.target.name]: event.target.value });\n  };\n  const dispatch = useDispatch();\n  const { onClose, selectedValue, open } = props;\n  return (\n    <Grid>\n      <Grid conatiner>\n        IMAGE_SOURCE : <input type=\"text\"></input>\n      </Grid>\n      <br></br>\n      <Grid container>\n        NAME OF THE BOOK:\n        <input type=\"text\" name=\"book_name\" onChange={aboutBook}></input>\n      </Grid>\n      <br></br>\n\n      <Grid container>\n        AUTHOR:\n        <input type=\"text\" name=\"author\" onChange={aboutBook}></input>\n      </Grid>\n      <br></br>\n\n      <Grid container>\n        <input\n          type=\"submit\"\n          onClick={() => dispatch(addBook(book)) && { handleClose }}\n        ></input>\n        <br></br>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default Add_Form;\n"]},"metadata":{},"sourceType":"module"}