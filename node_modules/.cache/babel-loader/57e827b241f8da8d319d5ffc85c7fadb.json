{"ast":null,"code":"var _jsxFileName = \"/home/vivers/card/src/AddButton.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport { Grid } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport { addBook } from \"./store/action\";\nimport img1 from \"./img1.png\";\nimport { BrushRounded } from \"@material-ui/icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1)\n    }\n  }\n}));\nexport default function AddButton() {\n  _s();\n\n  const classes = useStyles();\n  const [book, setbook] = useState({\n    img_src: img1,\n    time_left: \"60 min left\",\n    persons_read: \"16k\",\n    book_name: \"\",\n    author: \"\"\n  });\n\n  const aboutBook = event => {\n    setbook({ ...book,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const dispatch = useDispatch();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.root,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        href: \"#contained-buttons\",\n        children: \"ADD BOOK\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          children: \"x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        conatiner: true,\n        children: [\"IMAGE_SOURCE : \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        children: [\"NAME OF THE BOOK:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"book_name\",\n          onChange: aboutBook\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        children: [\"AUTHOR:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"author\",\n          onChange: aboutBook\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 18\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          onClick: () => dispatch(addBook(book))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n} // export default Add_Form;\n\n_s(AddButton, \"85JdBXDGc62QBaPv/cg3GOm4HOE=\", false, function () {\n  return [useStyles, useDispatch];\n});\n\n_c = AddButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddButton\");","map":{"version":3,"sources":["/home/vivers/card/src/AddButton.js"],"names":["React","useState","makeStyles","Button","Grid","useDispatch","addBook","img1","BrushRounded","useStyles","theme","root","margin","spacing","AddButton","classes","book","setbook","img_src","time_left","persons_read","book_name","author","aboutBook","event","target","name","value","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\n\nimport { Grid } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport { addBook } from \"./store/action\";\nimport img1 from \"./img1.png\";\nimport { BrushRounded } from \"@material-ui/icons\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n}));\n\nexport default function AddButton() {\n  const classes = useStyles();\n  const [book, setbook] = useState({\n    img_src: img1,\n    time_left: \"60 min left\",\n    persons_read: \"16k\",\n    book_name: \"\",\n    author: \"\",\n  });\n\n  const aboutBook = (event) => {\n    setbook({ ...book, [event.target.name]: event.target.value });\n  };\n  const dispatch = useDispatch();\n\n  return (\n    <div>\n      <div className={classes.root}>\n        <Button variant=\"contained\" color=\"primary\" href=\"#contained-buttons\">\n          ADD BOOK\n        </Button>\n      </div>\n\n      <Grid>\n        <Grid container>\n          <Button>x</Button>\n        </Grid>\n        <Grid conatiner>\n          IMAGE_SOURCE : <input type=\"text\"></input>\n        </Grid>\n\n        <Grid container>\n          NAME OF THE BOOK:\n          <input type=\"text\" name=\"book_name\" onChange={aboutBook}></input>\n        </Grid>\n\n        <Grid container>\n          AUTHOR:<input type=\"text\" name=\"author\" onChange={aboutBook}></input>\n        </Grid>\n        <Grid container>\n          <input type=\"submit\" onClick={() => dispatch(addBook(book))}></input>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\n// export default Add_Form;\n"]},"metadata":{},"sourceType":"module"}