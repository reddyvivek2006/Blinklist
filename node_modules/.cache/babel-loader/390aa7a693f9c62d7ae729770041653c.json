{"ast":null,"code":"var _jsxFileName = \"/home/vivers/card/src/AddButton.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport Typography from '@material-ui/core/Typography';\nimport { blue } from '@material-ui/core/colors';\nimport { Grid } from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { addBook } from \"./store/action\";\nimport img1 from \"./img1.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  avatar: {\n    backgroundColor: blue[100],\n    color: blue[600]\n  },\n  button: {\n    float: \"right\",\n    paddingLeft: \"2%\",\n    paddingTop: \"2%\",\n    paddingBottom: \"2%\",\n    paddingRight: \"2%\"\n  }\n});\n\nfunction SimpleDialog(props) {\n  _s();\n\n  const [book, setbook] = useState({\n    img_src: img1,\n    time_left: \"60 min left\",\n    persons_read: \"16k\",\n    book_name: \"\",\n    author: \"\"\n  });\n\n  const aboutBook = event => {\n    setbook({ ...book,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const {\n    onClose,\n    selectedValue,\n    open\n  } = props;\n\n  const handleClose = () => {\n    onClose(selectedValue);\n  };\n\n  const dispatch = useDispatch();\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    onClose: handleClose,\n    \"aria-labelledby\": \"simple-dialog-title\",\n    open: open,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      id: \"simple-dialog-title\",\n      children: \"Set backup account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        conatiner: true,\n        children: [\"IMAGE_SOURCE : \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 24\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        children: [\"NAME OF THE BOOK:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"book_name\",\n          onChange: aboutBook\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        children: [\"AUTHOR:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"author\",\n          onChange: aboutBook\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          onClick: () => dispatch(addBook(book))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SimpleDialog, \"oyXWSUZ3diOaoJ4sHOgHzyxXvAE=\", false, function () {\n  return [useDispatch];\n});\n\n_c = SimpleDialog;\nSimpleDialog.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired\n};\nexport default function AddButton() {\n  _s2();\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = value => {\n    setOpen(false);\n  };\n\n  const classes = useStyles;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outlined\",\n      color: \"primary\",\n      onClick: handleClickOpen,\n      style: classes.button,\n      children: \"ADD BOOK\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SimpleDialog, {\n      open: open,\n      onClose: handleClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(AddButton, \"xG1TONbKtDWtdOTrXaTAsNhPg/Q=\");\n\n_c2 = AddButton;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SimpleDialog\");\n$RefreshReg$(_c2, \"AddButton\");","map":{"version":3,"sources":["/home/vivers/card/src/AddButton.js"],"names":["PropTypes","makeStyles","Button","DialogTitle","Dialog","Typography","blue","Grid","React","useState","useDispatch","addBook","img1","useStyles","avatar","backgroundColor","color","button","float","paddingLeft","paddingTop","paddingBottom","paddingRight","SimpleDialog","props","book","setbook","img_src","time_left","persons_read","book_name","author","aboutBook","event","target","name","value","onClose","selectedValue","open","handleClose","dispatch","propTypes","func","isRequired","bool","AddButton","setOpen","handleClickOpen","classes"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button'\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport Typography from '@material-ui/core/Typography';\nimport { blue } from '@material-ui/core/colors';\nimport { Grid } from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { addBook } from \"./store/action\";\nimport img1 from \"./img1.png\";\n\n\n\n\nconst useStyles = makeStyles({\n\n  avatar: {\n    backgroundColor: blue[100],\n    color: blue[600],\n  },\n  button:{\n    float:\"right\",\n    paddingLeft:\"2%\",\n    paddingTop:\"2%\",\n    paddingBottom:\"2%\",\n    paddingRight:\"2%\"\n  }\n});\n\nfunction SimpleDialog(props) {\n  const [book, setbook] = useState({\n    img_src: img1,\n    time_left: \"60 min left\",\n    persons_read: \"16k\",\n    book_name: \"\",\n    author: \"\",\n  });\n  const aboutBook = (event) => {\n    setbook({ ...book, [event.target.name]: event.target.value });\n  };\n  \n  const { onClose, selectedValue, open } = props;\n \n\n  const handleClose = () => {\n    onClose(selectedValue);\n  };\n\n  const dispatch = useDispatch();\n  return (\n    <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\n      <DialogTitle id=\"simple-dialog-title\">Set backup account</DialogTitle>\n      <Grid>\n      <Grid conatiner>\n        IMAGE_SOURCE : <input type=\"text\"></input>\n      </Grid>\n\n      <Grid container>\n        NAME OF THE BOOK:\n        <input type=\"text\" name=\"book_name\" onChange={aboutBook}></input>\n      </Grid>\n\n      <Grid container>\n        AUTHOR:<input type=\"text\" name=\"author\" onChange={aboutBook}></input>\n      </Grid>\n      <Grid container>\n        <input type=\"submit\" onClick={() => dispatch(addBook(book))}></input>\n      </Grid>\n    </Grid>\n    </Dialog>\n  );\n}\n\nSimpleDialog.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  \n};\n\nexport default function AddButton() {\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (value) => {\n    setOpen(false);\n  };\n  const classes=useStyles\n\n  return (\n    <div>\n     \n      <br />\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen} style={classes.button}>\n        ADD BOOK\n      </Button>\n      <SimpleDialog  open={open} onClose={handleClose} />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}